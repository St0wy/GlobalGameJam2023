using UnityEngine;

namespace GlobalGameJam
{
	[RequireComponent(typeof(Health), typeof(SpriteRenderer))]
	public class InvulnerabilityOnHurtBehaviour : MonoBehaviour
	{
		[SerializeField]
		private float _invulnerabilityTimeInSeconds = 1f;

		[SerializeField]
		private float _blinkSpeed = 0.2f;

		private float _invulnerabilityTimer;
		private float _oldInvulnerabilityTimer;
		private float _blinkTimer;

		private Health _health;
		private SpriteRenderer _spriteRenderer;

		private void Awake()
		{
			_health = GetComponent<Health>();
			_spriteRenderer = GetComponent<SpriteRenderer>();
		}

		private void OnEnable()
		{
			_health.OnHurt += OnHurt;
		}

		private void OnDisable()
		{
			_health.OnHurt -= OnHurt;
		}

		private void Update()
		{
			_oldInvulnerabilityTimer = _invulnerabilityTimer;
			_invulnerabilityTimer -= Time.deltaTime;
			_blinkTimer -= Time.deltaTime;

			if (_blinkTimer <= 0f && !_health.CanReceiveDamage)
			{
				_blinkTimer = _blinkSpeed;
				_spriteRenderer.enabled = !_spriteRenderer.enabled;
			}

			// Check if we just arrived at 0 on the timer
			if (_oldInvulnerabilityTimer > 0f && _invulnerabilityTimer <= 0f)
			{
				_health.CanReceiveDamage = true;
				_blinkTimer = 0f;
				_spriteRenderer.enabled = true;
			}
		}

		private void OnHurt(Transform attackerTransform)
		{
			_invulnerabilityTimer = _invulnerabilityTimeInSeconds;
			_health.CanReceiveDamage = false;
			_blinkTimer = _blinkSpeed;
		}
	}
}